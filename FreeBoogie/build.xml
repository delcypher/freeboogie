<!-- 
  When modifying this file please make sure that:
   - All generated files are removed by the "clean" target.
   - There are no tabs, only spaces.
-->

<project name="FreeBoogie" default="compile" basedir=".">
  <description>infrastructure for handling Boogie code</description>

  <!-- {{{ set properties for this build, and helpers -->
  <property file="global.properties"/>
  <property file="local.properties"/>
  <target name="locals.check">
    <available file="local.properties" property="locals.ok"/>
  </target>
  <target name="locals" depends="locals.check" unless="locals.ok">
    <copy file="local.properties.sample" tofile="local.properties"/>
    <echo>WARNING: Please edit the file local.properties</echo>
    <echo>WARNING: You won't see these warnings again.</echo>
  </target>
  <!-- }}} -->

  <!-- {{{ properties that are computed -->
  <property name="cli-dst-dir" location="generated-src/freeboogie/cli"/>
  <property name="ast-src-dir" location="src/${ast-dir}"/>
  <property name="ast-dst-dir" location="generated-src/${ast-dir}"/>
  <property name="parser-src-dir" location="src/${parser-dir}"/>
  <property name="parser-dst-dir" location="generated-src/${parser-dir}"/>
  <path id="classpath">
    <fileset dir="lib" includes="*.jar" />
    <pathelement path="classes"  />
  </path>
  <!-- }}} -->

  <!-- {{{ custom tasks -->
  <taskdef
    resource="checkstyletask.properties"
    classpath="lib/checkstyle.jar:lib/antlr-2.7.7.jar:lib/commons-beanutils.jar:lib/commons-collections3.jar:lib/commons-logging.jar" />
  <taskdef 
    name="findbugs" 
    classname="edu.umd.cs.findbugs.anttask.FindBugsTask"
    classpath="lib/findbugs-ant.jar"/>
  <!-- TODO(radugrigore): task for clops -->
  <!-- }}} -->

  <!-- {{{ code generation and related -->
  <target 
      name="generate_ast" 
      depends="check_ast_uptodate"
      unless="ast.notRequired"
      description="generates AST">
    <antcall target="clean_ast"/>
    <mkdir dir="${ast-dst-dir}" />
    <touch file="generated-src/ast.timestamp"/>
    <java fork="yes" dir="${ast-dst-dir}" jar="lib/${astgen-jar}">
      <arg value="${ast-src-dir}/fb.ag" />
      <arg value="${ast-src-dir}/classes.tpl" />
      <arg value="${ast-src-dir}/evaluator.tpl" />
      <arg value="${ast-src-dir}/transformer.tpl" />
      <arg value="${ast-src-dir}/substitutor.tpl" />
      <arg value="${ast-src-dir}/html.tpl" />
      <arg value="${ast-src-dir}/utils.tpl" />
    </java>
  </target>

  <target name="generate_ast_picture" depends="generate_ast">
    <exec dir="${ast-dst-dir}" executable="dot">
      <arg value="-Tgif" />
      <arg value="hierarchy.dot" />
      <arg value="-o" />
      <arg value="hierarchy.gif" />
    </exec>
  </target>

  <target 
      name="generate_parser" 
      depends="check_parser_uptodate"
      unless="parser.notRequired">
    <mkdir dir="${parser-dst-dir}" />
    <touch file="generated-src/parser.timestamp"/>
    <java fork="yes" dir="${parser-dst-dir}" classname="org.antlr.Tool">
      <classpath refid="classpath" />
      <arg value="-o"/><arg value="${parser-dst-dir}"/>
      <arg value="${parser-src-dir}/Fb.g" />
    </java>
  </target>

  <target 
      name="generate_cli_parser" 
      depends="check_cli_uptodate"
      unless="cli.notRequired">
    <mkdir dir="${cli-dst-dir}" />
    <touch file="generated-src/cli.timestamp"/>
    <java fork="yes" classname="ie.ucd.clops.dsl.Main" output="clops.log">
      <assertions><enable/></assertions>
      <classpath refid="classpath"/>
      <arg value="-o=${cli-dst-dir}"/>
      <arg value="-t=${cli-dst-dir}"/>
      <arg value="-b=html"/>
      <arg value="-c=src/freeboogie/usage.vm"/>
      <arg value="-p=freeboogie.cli"/>
      <arg value="src/freeboogie/freeboogie.clo"/>
    </java>
  </target>

  <target
      name="generate_code"
      depends="generate_ast,generate_parser,generate_cli_parser"/>

  <target name="check_ast_uptodate">
    <uptodate 
        property="ast.notRequired" 
        targetfile="generated-src/ast.timestamp">
      <srcfiles dir="${ast-src-dir}" includes="*.tpl"/>
      <srcfiles file="${ast-src-dir}/fb.ag"/>
    </uptodate>
  </target>

  <target name="check_parser_uptodate">
    <uptodate 
        property="parser.notRequired" 
        targetfile="generated-src/parser.timestamp">
      <srcfiles file="${parser-src-dir}/Fb.g"/>
    </uptodate>
  </target>

  <target name="check_cli_uptodate">
    <uptodate
        property="cli.notRequired"
        targetfile="generated-src/cli.timestamp">
      <srcfiles file="src/freeboogie/freeboogie.clo"/>
    </uptodate>
  </target>
  <!-- }}} -->

  <!-- {{{ compilation and documentation targets -->
  <target
      name="compile"
      depends="generate_code"
      description="compile the source ">
    <mkdir dir="classes"/>
    <javac 
        srcdir="src:generated-src"
        destdir="classes" 
        optimize="yes"
        includeAntRuntime="true"
        debug="${debug}">
      <classpath refid="classpath" /> 
      <compilerarg value="-Xlint:all" />
      <compilerarg value="-Xmaxerrs" /><compilerarg value="10" />
      <compilerarg value="-Xmaxwarns" /><compilerarg value="10" />
    </javac>
  </target>
  
  <target name="doc" description="generate javadoc" depends="generate_code">
    <javadoc destdir="docs/api" sourcepath="src">
      <package name="freeboogie.*" />
      <classpath refid="classpath" />
    </javadoc>
  </target>
  <!-- }}} -->

  <!-- {{{ distribution -->
  <target
      name="dist"
      depends="compile"
      description="generate the distribution">
    <mkdir dir="dist" />
    <mkdir dir="dist/lib" />
    <jar 
        jarfile="dist/freeboogie-${version}.jar"
        basedir="classes">
      <manifest>
        <attribute name="Main-Class" value="freeboogie.Main" />
        <attribute name="Class-Path" 
          value="lib/${antlr-jar} lib/${genericutils-jar} lib/${gcollect-jar} lib/${clops-jar} lib/${jline-jar}"/>
      </manifest>
    </jar>
    <copy file="lib/${antlr-jar}" todir="dist/lib" />
    <copy file="lib/${clops-jar}" todir="dist/lib" />
    <copy file="lib/${gcollect-jar}" todir="dist/lib" />
    <copy file="lib/${genericutils-jar}" todir="dist/lib" />
    <copy file="lib/${jline-jar}" todir="dist/lib" />
  </target>
  <!-- }}} -->
 
  <!-- {{{ test targets -->

  <target name="functional_test" depends="compile" description="run functional tests">
    <exec executable="test/functional/test" 
          dir="test/functional"
          resolveexecutable="true"
          failonerror="true"/>
  </target>

  <target name="test" depends="functional_test" description="run all tests"></target>
  <!-- }}} -->

  <!-- {{{ static analyzes -->
  <target name="style">
    <checkstyle config="style.xml">
      <fileset dir="src">
         <include name="**/*.java"/>
         <exclude name="**/parser/*"/>
         <exclude name="**/ast/*"/>
      </fileset>
      <classpath refid="classpath"/>
    </checkstyle>
  </target>

  <target name="findbugs" depends="locals,compile" if="locals.ok">
    <findbugs home="${findbugs.home}" output="text" outputFile="bugs.txt">
      <auxClasspath refid="classpath"/>
      <sourcePath path="src"/>
      <class location="classes"/>
    </findbugs>
  </target>
  <!-- }}} -->

  <!-- {{{ cleanup targets -->
  <target name="clean_ast" description="removes AST generated files">
    <delete dir="${ast-dst-dir}" />
  </target>

  <target name="clean" depends="clean_ast" description="clean up">
    <delete dir="classes" />
    <delete dir="generated-src"/>
    <delete dir="dist" />
    <delete dir="docs/api" />
    <delete file="clops.log"/>
    <delete file="bugs.txt"/>
    <delete includeEmptyDirs="true" quiet="true">
      <!-- files generated by testing -->
      <fileset dir="test/functional" includes="**/diff.*" />
      <fileset dir="test/functional" includes="**/out" />
      <fileset dir="test/functional" includes="**/err" />
      <fileset dir="test/functional" includes="**/*.log" />
      <fileset dir="test/custom/parser" includes="*.lex" />
      <fileset dir="${junit_reports}" includes="**/*" />
    </delete>
    <defaultexcludes remove="**/*~" />
    <delete>
      <!-- editor leftovers -->
      <fileset dir="" includes="**/*~"/>
      <fileset dir="" includes="**/semantic.cache" />
    </delete>
    <delete>
      <!-- TeX leftovers -->
      <fileset dir="" includes="**/*.aux" />
      <fileset dir="" includes="**/*.log" />
    </delete>
    <defaultexcludes default="true" />
  </target>
  <!-- }}} -->
</project>

